# Generated by Django 3.2.14 on 2022-09-07 09:39

import authentication.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.IntegerField(choices=[(1, 'Creator'), (2, 'Agency')], default=1)),
                ('forget_password_token', models.TextField(blank=True, null=True)),
                ('token_expire_time', models.DateTimeField(blank=True, null=True)),
                ('profile_title', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_description', models.TextField(blank=True, null=True)),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='user_profile_images/', validators=[authentication.models.validate_image])),
                ('video', models.FileField(blank=True, null=True, upload_to='user_video/', validators=[authentication.models.validate_video_extension])),
                ('profile_status', models.CharField(blank=True, choices=[('0', 'away'), ('1', 'online'), ('2', 'offline')], default='1', max_length=30, null=True)),
                ('preferred_communication_mode', models.CharField(blank=True, choices=[('0', 'Email'), ('1', 'Whatsapp'), ('2', 'Skype'), ('3', 'Direct message')], default='0', max_length=30, null=True)),
                ('preferred_communication_id', models.CharField(blank=True, max_length=200, null=True)),
                ('is_exclusive', models.BooleanField(default=False)),
                ('is_trashed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_trashed', models.BooleanField(default=False)),
                ('clientPayerId', models.CharField(blank=True, max_length=100, null=True)),
                ('tintype', models.CharField(blank=True, default='Individual', max_length=200, null=True)),
                ('payerTin', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('suffix', models.CharField(blank=True, max_length=50, null=True)),
                ('ssn', models.CharField(blank=True, max_length=100, null=True)),
                ('address_1', models.CharField(blank=True, max_length=250, null=True)),
                ('address_2', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=13, null=True)),
                ('country', models.CharField(blank=True, default='US', max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('last_filing', models.BooleanField(default=True)),
                ('combined_fed_state_filing', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Payment Details',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_trashed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('public_key', models.CharField(blank=True, max_length=200, null=True)),
                ('secret_key', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Payment Method',
            },
        ),
        migrations.CreateModel(
            name='CustomUserPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_images', models.FileField(blank=True, null=True, upload_to='user_portfolio')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'CustomUser Portfolio',
            },
        ),
    ]
